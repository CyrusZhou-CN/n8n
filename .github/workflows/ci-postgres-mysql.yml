name: Test Postgres and MySQL schemas

on:
  push:
    branches:
      - dt_ci_yml_only

concurrency:
  group: db-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

env:
  NODE_OPTIONS: '--max-old-space-size=3072'

jobs:
  build:
    name: Install & Build
    runs-on: blacksmith-2vcpu-ubuntu-2204
    if: github.event_name != 'pull_request_review' || startsWith(github.event.pull_request.base.ref, 'release/')
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup and Build
        uses: n8n-io/n8n/.github/actions/setup-nodejs-blacksmith@f5fbbbe0a28a886451c886cac6b49192a39b0eea # v1.104.1

  # sqlite-pooled:
  #   name: SQLite Pooled
  #   needs: build
  #   runs-on: blacksmith-2vcpu-ubuntu-2204
  #   timeout-minutes: 20
  #   env:
  #     DB_TYPE: sqlite
  #     DB_SQLITE_POOL_SIZE: 4
  #   steps:
  #     - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

  #     - name: Setup and Build
  #       uses: n8n-io/n8n/.github/actions/setup-nodejs-blacksmith@f5fbbbe0a28a886451c886cac6b49192a39b0eea # v1.104.1

  #     - name: Test SQLite Pooled
  #       working-directory: packages/cli
  #       run: pnpm test:sqlite

  mysql:
    name: MySQL 8.4 - Run ${{ matrix.run }}
    needs: build
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 20
    strategy:
      matrix:
        run: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    env:
      DB_MYSQLDB_PASSWORD: password
      DB_MYSQLDB_POOL_SIZE: 1
      DB_MYSQLDB_CONNECTION_TIMEOUT: 120000
      DB_MYSQLDB_ACQUIRE_TIMEOUT: 120000
      DB_MYSQLDB_TIMEOUT: 120000
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup and Build
        uses: n8n-io/n8n/.github/actions/setup-nodejs-blacksmith@f5fbbbe0a28a886451c886cac6b49192a39b0eea # v1.104.1

      - name: Start MySQL
        uses: isbang/compose-action@802a148945af6399a338c7906c267331b39a71af # v2.0.0
        with:
          compose-file: ./.github/docker-compose.yml
          services: mysql-8.4

      - name: Test MySQL
        working-directory: packages/cli
        # We sleep here due to issues with connecting to the database too soon
        run: sleep 2s && pnpm test:mysql --testTimeout 120000

  postgres:
    name: Postgres - Run ${{ matrix.run }}
    needs: build
    runs-on: blacksmith-2vcpu-ubuntu-2204
    timeout-minutes: 20
    strategy:
      matrix:
        run: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    env:
      DB_POSTGRESDB_PASSWORD: password
      DB_POSTGRESDB_POOL_SIZE: 1 # Detect connection pooling deadlocks
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup and Build
        uses: n8n-io/n8n/.github/actions/setup-nodejs-blacksmith@f5fbbbe0a28a886451c886cac6b49192a39b0eea # v1.104.1

      - name: Start Postgres
        uses: isbang/compose-action@802a148945af6399a338c7906c267331b39a71af # v2.0.0
        with:
          compose-file: ./.github/docker-compose.yml
          services: |
            postgres

      - name: Test Postgres
        working-directory: packages/cli
        run: pnpm test:postgres
